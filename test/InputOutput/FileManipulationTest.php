<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-11 at 11:48:45.
 */

/**
 * @package Test\InputOutput
 */
namespace Test\InputOutput;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-11 at 11:48:45.
 * Classe implementa testes à objeto de FileManipulation
 * @author Thiago Mallon <thiagomallon@gmail.com>
 * @group InputOutput
 * @group InputOutput/FileManipulationTest
 */
class FileManipulationTest extends \PHPUnit_Framework_TestCase
{
    /**
     * Propriedade atuará como objeto de FileManipulation
     * @var FileManipulation $fileHandle Objeto de de FileManipulation
     */
    protected $fileHandle;
    /**
     * Property stores
     * @var datatype $filePath description
     */
    protected $filePath = 'public/files/fileManipulationTest';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->fileHandle = fopen($this->filePath, 'w+');
        if (!$this->fileHandle) {
            die('Unable to create/open file');
        } else {
            fwrite($this->fileHandle, "This is the initial file content\n");
        }
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        //unset($this->fileHandle); // limpa variável que armazena handle
        //unlink($this->filePath); // deleta arquivo
    }

    /**
     * Método implementará testes
     * @covers App\InputOutput\FileManipulation::factoryFile
     * @return void
     */
    public function testFileGetContents()
    {
        // verifica conteúdo inicial do arquivo, através da função file_get_contents()
        $this->assertContains('This is the initial file content', file_get_contents($this->filePath));
    }

    /**
     * The testFTruncate method
     * @return void
     */
    public function testFTruncate()
    {
        
    }
}
