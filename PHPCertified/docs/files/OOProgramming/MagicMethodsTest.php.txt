<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-05 at 13:17:22.
 * @group OOProgramming
 * @group MagicMethodsTest
 */
class MagicMethodsTest extends PHPUnit_Framework_TestCase
{
    protected $_itsNotMagic;

    public function setUp()
    {
        /* atribui instância da classe OOMohter à propriedade $_itsNotMagic */
        $this->_itsNotMagic = new \App\OOProgramming\MagicMethods();
    }

    public function tearDown()
    {
        /* 'destroi' instancia da classe */
        unset($this->_itsNotMagic);
    }

    public function testUndefinedMethod()
    {
        /* expressão abaixo executa método mágico __call(), da classe Mother, já que o método
         * justAddedMethod(), não existe na classe Mother, mas o método __call() */
        $res = $this->_itsNotMagic->justAddedMethod(['First', 'Second', 'Third']);
        $this->assertCount(1, $res); // confirma array de dois elementos como retorno do método
        $this->assertcount(3, $res[0]); /* confirma array de três elementos, referente ao array, passado
                                         * como segundo argumento ao método justAddedMethod() */
        $this->assertContains('First', $res[0][0]); /* verifica se existe valor 'First' em algum dos elementos
                                                     * do array de argumentos, retornado */
    }

    public function testSettingInaccessibleProperty()
    {
        $this->_itsNotMagic->notDefProp = 'Setando private';
        $this->assertEquals('Setando private', $this->_itsNotMagic->notDefProp);

        /* Na linha seguinte, através do retorno da função get_object_vars, constata-se que não cria-se, de fato
         * uma nova propriedade, mas, assim como está na implementação do método __set(), atribui-se
         * a um array, que então retorna, pelo método __get() */
         // var_dump(get_object_vars($this->_itsNotMagic));
    }

    public function testToStrindMagicMethod()
    {
        $_localWithoutMagic = new \App\OOProgramming\MagicMethods();
        ob_start(); // iniciliaza output buffer
        echo $_localWithoutMagic; // faz-se chamada indireta ao método mágico __toString() da classe
        $toStringMsg = ob_get_clean(); // captura-se saída, limpa-se buffer de saída e retorna-se a mesma

        // verifica-se se método __toString() foi acionado e retornou a msg esperada
        $this->assertEquals('Hey, this is not a string, this is the MagicMethods class. Welcome aboard, pirate!', $toStringMsg);
    }

    public function testVarDumpOverrite()
    {
        /* O teste não dará certo, pois o método mágico __debugInfo() só foi adicionado após versão 5.6.0
         * do PHP. */
        //var_dump($this->_itsNotMagic);
    }
}

